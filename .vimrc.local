" MyConf

let g:snips_author = "Andreas Adelsberger"
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"

set gfn=Monospace\ 9

set list            " show hidden characters
set listchars=nbsp:~    "show strange nbsp chars from text copied out of the web
set tabstop=4       " The width of a TAB is set to 4.
" Still it is a \t. It is just that
" Vim will interpret it to be having
" a width of 4.

set shiftwidth=4    " Indents will have a width of 4
set softtabstop=4   " Sets the number of columns for a TAB
set expandtab       " Expand TABs to spaces
set lcs=nbsp:%

" to enable .vimrc per project
set exrc

set history=1000 " Store a ton of history (default is 20)
if has('persistent_undo')
    "set undofile "so is persistent undo ...
    set undolevels=1000 "maximum number of changes that can be undone
    set undoreload=10000 "maximum number lines to save for undo on a buffer reload
endif


"https://github.com/stephpy/vim-phpdoc/blob/master/plugin/phpdoc.vim
"inoremap <C-P> <ESC>:call PhpDocSingle()<CR>i
"nnoremap <C-P> :call PhpDocSingle()<CR>
"vnoremap <C-P> :call PhpDocRange()<CR>
" imap <C-o> :set paste<CR>:exe PhpDoc()<CR>:set nopaste<CR>i
"inoremap <C-P> <ESC>:call PhpDoc()<CR>i
"nnoremap <C-P> :call PhpDoc()<CR>
"vnoremap <C-P> :call PhpDoc()<CR>
inoremap <C-P> <ESC>:call pdv#DocumentCurrentLine()<CR>i
nnoremap <C-P> :call pdv#DocumentWithSnip()<CR>
vnoremap <C-P> :call pdv#DocumentWithSnip()<CR>
"inoremap <buffer> <C-P> :call pdv#DocumentCurrentLine()<CR>
"nnoremap <buffer> <C-p> :call pdv#DocumentWithSnip()<CR>
let g:pdv_cfg_Author = "Andreas Adelsberger <andreas.adelsberger@styleflasher.at>"
"phpdoc
let g:pdv_cfg_Type = "mixed"
let g:pdv_cfg_Package = ""
let g:pdv_cfg_Version = "$id$"
let g:pdv_cfg_Copyright = "2014 Styleflasher"
let g:pdv_cfg_License = "PHP Version 3.0 {@link http://www.php.net/license/3_0.txt}"
let g:pdv_template_dir = $HOME ."/SF-config-vim/bundle/pdv/templates_snip"

" don't open the errors on old projects
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list=1
let g:syntastic_aggregate_errors = 1

"php autocomplete fix find tag in static function calls
au BufRead,BufNewFile *.ini.append.*.php set filetype=ezpini
au BufRead,BufNewFile *.ini.append.php set filetype=ezpini
au BufRead,BufNewFile *.ts set filetype=xml
autocmd FileType php setlocal iskeyword-=58
autocmd FileType ezp set textwidth=0
autocmd FileType xml set textwidth=0

set mouse=a " automatically enable mouse usage
set mousemodel=extend
set history=1000
" open all files as unix files to see ^Ms
set fileformat=unix
set fileformats=unix

"reset strang guioptions from .vimrc
set guioptions&
set guioptions-=T
set guioptions-=e

if has('gui_running')
  set grepprg=grep\ -nH\ $*
  filetype indent on
  let g:tex_flavor='latex'
endif
au BufEnter *.tex set autowrite
let g:Tex_DefaultTargetFormat = 'pdf'
let g:Tex_MultipleCompileFormats = 'pdf'
let g:Tex_CompileRule_pdf = 'pdflatex -interaction=nonstopmode $*'
let g:Tex_GotoError = 0
let g:Tex_ViewRule_pdf = 'evince'

"UltiSnips for angularjs
let g:UltiSnipsSnippetDirectories = [$HOME ."/.vim/bundle/angular-vim-snippets/UltiSnips", $HOME ."/SF-config-vim/UltiSnips"]

"If you enable this, itâ€™s also a good idea to add this to the end of your ~/.vimrc to disable unsafe commands in your project-specific .vimrc files:
set secure
